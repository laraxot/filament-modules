<?php

namespace Coolsam\FilamentModules;

use Closure;
use Coolsam\FilamentModules\Commands\ModuleMakePanelCommand;
use Coolsam\FilamentModules\Extensions\LaravelModulesServiceProvider;
use Filament\Facades\Filament;
use Illuminate\Support\HtmlString;
use Spatie\LaravelPackageTools\Package;
use Spatie\LaravelPackageTools\PackageServiceProvider;

class ModulesServiceProvider extends PackageServiceProvider
{
    public function configurePackage(Package $package): void
    {
        /*
         * This class is a Package Service Provider
         *
         * More info: https://github.com/spatie/laravel-package-tools
         */
        $package
            ->name('modules')
            ->hasConfigFile('modules')
            ->hasViews()
            ->hasCommands([
                ModuleMakePanelCommand::class,
            ]);
    }

    public function register()
    {
        $this->app->register(LaravelModulesServiceProvider::class);
        $this->app->singleton('coolsam-modules', Modules::class);
        return parent::register();
    }

    public function callBootedCallbacks()
    {
        foreach (Filament::getPanels() as $panel) {
            $id = \Str::of($panel->getId());
            if ($id->contains('::')) {
                $title = $id->replace(['::', '-'], [' ', ' '])->title()->toString();
                $panel
                    ->renderHook(
                        'sidebar.start',
                        fn() => new HtmlString("<h2 class='m-2 p-2 font-black text-xl'>$title</h2>"),
                    )->renderHook(
                        'sidebar.end',
                        fn() => new HtmlString("<a href='".url("/")."' class='m-2 p-2 block rounded-lg font-bold bg-primary-500/10 text-primary-500'>Go to Home</a>"),
                    )
                ;
            }
        }
        parent::callBootedCallbacks(); // TODO: Change the autogenerated stub
    }
}
